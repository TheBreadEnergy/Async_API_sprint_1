POSTGRES_CONNECTION_ID=postgres
BATCH_SIZE=100
MOVIE_STATE_KEY=movie_state_key
GENRE_STATE_KEY=genre_state_key
PERSON_STATE_KEY=person_state_key
MOVIE_INDEX=movies
GENRE_INDEX=genres
PERSON_INDEX=persons
MOVIE_DAG=Movie_ETL
GENRE_DAG=Genre_ETL
PERSON_DAG=Person_ETL
ETL_INTERVAL=1
ELASTICSEARCH_HOST=elastic
ELASTICSEARCH_PORT=9200
DB_SCHEMA=content
DB_MOVIE_TABLE=film_work
DB_GENRE_TABLE=genre
DB_PERSON_TABLE=person
DB_MOVIE_GENRE_M2M_TABLE=genre_film_work
DB_MOVIE_GENRE_M2M_TABLE=person_film_work
AIRFLOW_CONN_POSTGRES=postgres://app:123qwe@postgres:5432
AIRFLOW__CORE__EXECUTOR: CeleryExecutor
AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
AIRFLOW__CORE__FERNET_KEY: ''
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
# yamllint disable rule:line-length
# Use simple http server on scheduler for health checks
# See https://airflow.apache.org/docs/apache-airflow/stable/administration-and-deployment/logging-monitoring/check-health.html#scheduler-health-check-server
# yamllint enable rule:line-length
AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
# WARNING: Use _PIP_ADDITIONAL_REQUIREMENTS option ONLY for a quick checks
# for other purpose (development, test and especially production usage) build/extend Airflow image.
_PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}